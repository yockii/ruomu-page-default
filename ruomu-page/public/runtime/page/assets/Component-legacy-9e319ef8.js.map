{"version":3,"file":"Component-legacy-9e319ef8.js","sources":["../../../../../ui/src/Component.vue","../../../../../ui/src/Component.vue"],"sourcesContent":["<template>\r\n  <component v-if=\"display()\" :is=\"tagName\" :id=\"config.id\"\r\n    :class=\"`ruomu-ui-component${config.className ? ` ${config.className}` : ''}`\" :style=\"style\" :config=\"config\"\r\n    :model=\"model\">\r\n  </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, getCurrentInstance, inject, provide } from 'vue';\r\n\r\nimport Core from '@tmagic/core';\r\nimport { toLine } from '@tmagic/utils';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({}),\r\n    },\r\n    model: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n\r\n  setup(props) {\r\n    const vm = getCurrentInstance()?.proxy;\r\n    const app: Core | undefined = inject('app');\r\n\r\n    provide('hoc', vm);\r\n\r\n    return {\r\n      tagName: computed(() => `ruomu-ui-${toLine(props.config.type)}`),\r\n      style: computed(() => app?.transformStyle(props.config.style)),\r\n\r\n      display: () => {\r\n        const displayCfg = props.config?.display;\r\n\r\n        if (typeof displayCfg === 'function') {\r\n          return displayCfg(app);\r\n        }\r\n        return displayCfg !== false;\r\n      },\r\n    };\r\n  },\r\n});\r\n</script>\r\n","<template>\r\n  <component v-if=\"display()\" :is=\"tagName\" :id=\"config.id\"\r\n    :class=\"`ruomu-ui-component${config.className ? ` ${config.className}` : ''}`\" :style=\"style\" :config=\"config\"\r\n    :model=\"model\">\r\n  </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, getCurrentInstance, inject, provide } from 'vue';\r\n\r\nimport Core from '@tmagic/core';\r\nimport { toLine } from '@tmagic/utils';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({}),\r\n    },\r\n    model: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n\r\n  setup(props) {\r\n    const vm = getCurrentInstance()?.proxy;\r\n    const app: Core | undefined = inject('app');\r\n\r\n    provide('hoc', vm);\r\n\r\n    return {\r\n      tagName: computed(() => `ruomu-ui-${toLine(props.config.type)}`),\r\n      style: computed(() => app?.transformStyle(props.config.style)),\r\n\r\n      display: () => {\r\n        const displayCfg = props.config?.display;\r\n\r\n        if (typeof displayCfg === 'function') {\r\n          return displayCfg(app);\r\n        }\r\n        return displayCfg !== false;\r\n      },\r\n    };\r\n  },\r\n});\r\n</script>\r\n"],"names":["_sfc_main","Vue","defineComponent","props","config","type","Object","default","model","setup","vm","app","provide","tagName","style","display","displayCfg","_ctx","_cache","$props","$setup","$data","$options","createBlock","resolveDynamicComponent","key","id","class","normalizeClass","className","normalizeStyle"],"mappings":"wIAae,MAAAA,EAAAC,IAAgBC,gBAAA,CAAAC,MAAA,CACtBC,OAAA,CACGC,KAAAC,OACAC,QAAAA,KAAA,CAAA,IAERC,MAAA,CACOH,KAAAC,OACCC,QAAAA,KAAA,CAAA,KAGVE,MAAAN,GAGE,MAAAO,EAAWT,gCACXU,EAA8BV,kBAI9B,OAFAA,IAAAW,QAAA,MAAAF,GAEA,CAAOG,QACIZ,mDAAsDa,MACxDb,sDAAsDc,QAAAA,KAG3D,MAAAC,EAAAb,EAAAC,QAAAW,QAEA,MAAA,mBAAAC,EACEA,EAAAL,IAEF,IAAAK,CAAA,EAEJ,yBC1CF,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,uCAAwDrB,IAAAsB,YAAAtB,IAAAuB,wBAAAP,EAAAJ,SAAA,CAAAY,IAAA,EAChDC,GAAAT,EAAAb,OAAAsB,GAA+EC,MAAgB1B,IAAQ2B,eAAA,sBAAAX,EAAAb,OAAAyB,UAAA,IAAAZ,EAAAb,OAAAyB,YAAA,KAAAf,MACrGb,IAAK6B,eAAAb,EAAAH,OAAAV,OAAAa,EAAAb"}