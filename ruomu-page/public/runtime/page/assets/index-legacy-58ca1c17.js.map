{"version":3,"file":"index-legacy-58ca1c17.js","sources":["../../../../../ui/src/basic/button/src/index.vue","../../../../../ui/src/basic/button/src/index.vue"],"sourcesContent":["<template>\r\n  <button class=\"ruomu-ui-button\" @click=\"clickHandler\">\r\n    <slot>\r\n      <ruomu-ui-text :config=\"textConfig\"></ruomu-ui-text>\r\n    </slot>\r\n  </button>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, getCurrentInstance, PropType, reactive } from 'vue';\r\n\r\nimport { MButton, MButtonInstance, MText } from '../../../types';\r\nimport useApp from '../../../useApp';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    config: {\r\n      type: Object as PropType<MButton>,\r\n      default: () => ({}),\r\n    },\r\n\r\n    model: {\r\n      type: Object,\r\n      default: () => ({}),\r\n    },\r\n  },\r\n  setup(props) {\r\n    useApp(props);\r\n    const vm: MButtonInstance = getCurrentInstance()?.proxy as MButtonInstance;\r\n    const actions = reactive<Function[]>([]);\r\n    const actualActions = computed(() => [\r\n      typeof props.config.preAction === 'function' ? props.config.preAction : () => true,\r\n      ...actions,\r\n      typeof props.config.postAction === 'function' ? props.config.postAction : () => true,\r\n    ]);\r\n    function pushAction(action: Function): void {\r\n      actions.push(action);\r\n    }\r\n    async function clickHandler(): Promise<void> {\r\n      for (const fn of actualActions.value) {\r\n        if (typeof fn === 'function') {\r\n          const ret = await fn(vm, { model: props.model });\r\n          if (ret === false) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const textConfig = computed<MText>(() => ({\r\n      type: 'text',\r\n      text: props.config?.text || '',\r\n      disabledText: props.config?.disabledText || '',\r\n      html: props.config?.html || '',\r\n    }));\r\n\r\n    return {\r\n      pushAction,\r\n      clickHandler,\r\n      textConfig,\r\n    };\r\n  },\r\n});\r\n</script>\r\n","<template>\r\n  <button class=\"ruomu-ui-button\" @click=\"clickHandler\">\r\n    <slot>\r\n      <ruomu-ui-text :config=\"textConfig\"></ruomu-ui-text>\r\n    </slot>\r\n  </button>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, getCurrentInstance, PropType, reactive } from 'vue';\r\n\r\nimport { MButton, MButtonInstance, MText } from '../../../types';\r\nimport useApp from '../../../useApp';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    config: {\r\n      type: Object as PropType<MButton>,\r\n      default: () => ({}),\r\n    },\r\n\r\n    model: {\r\n      type: Object,\r\n      default: () => ({}),\r\n    },\r\n  },\r\n  setup(props) {\r\n    useApp(props);\r\n    const vm: MButtonInstance = getCurrentInstance()?.proxy as MButtonInstance;\r\n    const actions = reactive<Function[]>([]);\r\n    const actualActions = computed(() => [\r\n      typeof props.config.preAction === 'function' ? props.config.preAction : () => true,\r\n      ...actions,\r\n      typeof props.config.postAction === 'function' ? props.config.postAction : () => true,\r\n    ]);\r\n    function pushAction(action: Function): void {\r\n      actions.push(action);\r\n    }\r\n    async function clickHandler(): Promise<void> {\r\n      for (const fn of actualActions.value) {\r\n        if (typeof fn === 'function') {\r\n          const ret = await fn(vm, { model: props.model });\r\n          if (ret === false) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const textConfig = computed<MText>(() => ({\r\n      type: 'text',\r\n      text: props.config?.text || '',\r\n      disabledText: props.config?.disabledText || '',\r\n      html: props.config?.html || '',\r\n    }));\r\n\r\n    return {\r\n      pushAction,\r\n      clickHandler,\r\n      textConfig,\r\n    };\r\n  },\r\n});\r\n</script>\r\n"],"names":["_sfc_main","Vue","defineComponent","props","config","type","Object","default","model","setup","useApp","vm","actions","reactive","actualActions","preAction","postAction","pushAction","action","push","clickHandler","async","fn","value","textConfig","text","disabledText","html","resolveComponent","openBlock","createElementBlock","class"],"mappings":"2KAae,MAAAA,EAAAC,IAAgBC,gBAAA,CAAAC,MAAA,CACtBC,OAAA,CACGC,KAAAC,OACAC,QAAAA,KAAA,CAAA,IAERC,MAAA,CAEOH,KAAAC,OACCC,QAAAA,KAAA,CAAA,KAGVE,MAAAN,GAEEO,EAAAP,GACA,MAAAQ,EAA4BV,gCAC5BW,EAAgBX,IAAqBY,SAAA,IACrCC,EAAsBb,mBAAe,mBAAAE,EAAAC,OAAAW,UAAAZ,EAAAC,OAAAW,UAAA,KAAA,KAC2CH,EAC3E,mBAAAT,EAAAC,OAAAY,WAAAb,EAAAC,OAAAY,WAAA,KAAA,KAwBL,MAAA,CAAOC,WArBP,SAAAC,GACEN,EAAAO,KAAAD,EAAmB,EAqBnBE,aAnBFC,iBACE,IAAA,MAAAC,KAAAR,EAAAS,MACE,GAAA,mBAAAD,IAEE,UADAA,EAAAX,EAAA,CAAAH,MAAAL,EAAAK,QAEE,KAGN,EAYAgB,WATiBvB,oBAAuBI,KAAA,OAClCoB,KAAAtB,EAAAC,QAAAqB,MAAA,GACsBC,aAAAvB,EAAAC,QAAAsB,cAAA,GACgBC,KAAAxB,EAAAC,QAAAuB,MAAA,OAQ9C,6DC1DF1B,IAIS2B,iBAAA,iBAJwB,OAAA3B,IAAA4B,YAAO5B,IAAA6B,mBAAA,SAAA,CAAAC,MAAA,qFAG/B"}